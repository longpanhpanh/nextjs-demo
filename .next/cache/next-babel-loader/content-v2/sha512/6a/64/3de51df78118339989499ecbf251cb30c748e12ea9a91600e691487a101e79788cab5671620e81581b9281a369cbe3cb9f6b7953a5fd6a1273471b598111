{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace\\\\react-course-udemy\\\\udemy-nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://media-cdn.tripadvisor.com/media/photo-s/0b/b6/8d/8e/hyde-park.jpg\",\n    title: \"A First Meetup\",\n    address: \"12345 Somewhere\",\n    description: \"This is A First Meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://longlong:tranthanhlong123@cluster0.zgkuk.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch Data\n  const client = await MongoClient.connect(\"mongodb+srv://longlong:tranthanhlong123@cluster0.zgkuk.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://media-cdn.tripadvisor.com/media/photo-s/0b/b6/8d/8e/hyde-park.jpg\",\n        title: \"A First Meetup\",\n        address: \"12345 Somewhere\",\n        description: \"This is A First Meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/workspace/react-course-udemy/udemy-nextjs-meetup/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","props","meetupData","id","image","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,2EADR;AAEE,IAAA,KAAK,EAAC,gBAFR;AAGE,IAAA,OAAO,EAAC,iBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,wGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEE,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEF,SAAO;AACLC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ,CADF;AAKLC,IAAAA,QAAQ,EAAE;AALL,GAAP;AAOD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACE,QAAMlB,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,wGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAIF,SAAO;AACLe,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEP,QADM;AAEVQ,QAAAA,KAAK,EACH,2EAHQ;AAIVC,QAAAA,KAAK,EAAE,gBAJG;AAKVC,QAAAA,OAAO,EAAE,iBALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe3B,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://media-cdn.tripadvisor.com/media/photo-s/0b/b6/8d/8e/hyde-park.jpg\"\r\n      title=\"A First Meetup\"\r\n      address=\"12345 Somewhere\"\r\n      description=\"This is A First Meetup\"\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://longlong:tranthanhlong123@cluster0.zgkuk.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    \r\n    client.close()\r\n\r\n  return {\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch Data\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://longlong:tranthanhlong123@cluster0.zgkuk.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n\r\n        \r\n  \r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        image:\r\n          \"https://media-cdn.tripadvisor.com/media/photo-s/0b/b6/8d/8e/hyde-park.jpg\",\r\n        title: \"A First Meetup\",\r\n        address: \"12345 Somewhere\",\r\n        description: \"This is A First Meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}